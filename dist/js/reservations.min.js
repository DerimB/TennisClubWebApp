async function loadGuestCount(){try{var e,t,o=localStorage.getItem("user_id");o?(e=await fetch("http://localhost:5000/api/users/"+o,{method:"GET",headers:{"Content-Type":"application/json"}})).ok?(t=(await e.json()).guest_count,console.log(`Guest Count for User ${o}:`,t),document.querySelector(".guest-count-number").textContent=t):console.error("Failed to fetch user data:",await e.text()):console.error("User not logged in.")}catch(e){console.error("Error fetching user data:",e)}}function refreshUpcomingReservationsDisplay(){document.querySelector(".display-upcoming-reservations").innerHTML=`
    <div class="upcoming-reservations-title">Upcoming Reservations</div>
  `,loadUpcomingReservations()}async function populateTimeOptions(e){var n=document.getElementById(e);if(n){n.innerHTML="",console.log("Cleared existing options for "+e);var t=document.createElement("option");t.value="",t.textContent="Please select time",t.disabled=!0,t.selected=!0,n.appendChild(t),console.log("Added placeholder option");let a=document.getElementById("date").value,o=(document.getElementById("date").addEventListener("change",function(){var e=this.value;document.getElementById("display-date").textContent=e}),[]);if(a)try{console.log("Fetching reservations for date: "+a);var r=await fetch("http://localhost:5000/api/reservations",{method:"GET",headers:{"Content-Type":"application/json"}});if(r.ok){let e=await r.json();console.log("Fetched reservations:",e)}else console.error("Failed to fetch reservations:",await r.text())}catch(e){console.error("Error fetching reservations:",e)}else console.log("No date selected, skipping reservation fetch");for(let t=6;t<=20;t++)for(let e=6===t?30:0;e<60&&!(14===t&&30<e);e+=30){let r=t.toString().padStart(2,"0")+":"+e.toString().padStart(2,"0");console.log("Checking availability for time: "+r);var i,s=!o.some(e=>{var t=e.start_time,o=e.end_time;return e.date===a&&(r>=t&&r<o||parseTimeToMinutes(r)<parseTimeToMinutes(o)+30&&parseTimeToMinutes(r)>=parseTimeToMinutes(o))&&(console.log(`Removing start-time option: ${r} because it overlaps with an existing reservation or is within 30 minutes after.`),!0)});console.log(`Time: ${r}, Available: `+s),s&&(s=t<12?"AM":"PM",s=`${t%12==0?12:t%12}:${e.toString().padStart(2,"0")} `+s,(i=document.createElement("option")).value=r,i.textContent=s,n.appendChild(i),console.log("Added time option: "+s))}}else console.error(`Element with id "${e}" not found.`)}function parseTimeToMinutes(e){var[e,t]=e.split(":").map(Number);return 60*e+t}async function updateEndTimeOptions(){console.log("updateEndTimeOptions called");var t=document.getElementById("start-time"),o=document.getElementById("end-time"),r=(o.innerHTML="",console.log("Cleared existing end-time options"),document.createElement("option"));r.value="",r.textContent="Please select time",r.disabled=!0,r.selected=!0,o.appendChild(r),console.log("Added placeholder option to end-time dropdown");let i=t.value;if(i){console.log("Selected start time: "+i);var[r,t]=i.split(":").map(Number);console.log(`Parsed start time: ${r} hour(s), ${t} minute(s)`);let a=document.getElementById("date").value,e=[];if(a)try{console.log("Fetching reservations for date: "+a);var s=await fetch("http://localhost:5000/api/reservations",{method:"GET",headers:{"Content-Type":"application/json"}});s.ok?(e=await s.json(),console.log("Fetched reservations:",e)):console.error("Failed to fetch reservations:",await s.text())}catch(e){console.error("Error fetching reservations:",e)}else console.log("Date not selected, skipping reservation fetch");let n=!1;e.forEach(e=>{var t,o,r;e.date===a&&(t=parseTimeToMinutes(e.start_time),r=(o=parseTimeToMinutes(i))-t,console.log("Reservation Start Time (minutes): "+t),console.log("Selected Start Time (minutes): "+o),console.log("Time Difference: "+r),90==r)&&(console.log("Reservation found 1 hour and 30 minutes before: "+e.start_time),n=!0)}),console.log("Is 1 hour and 30 minutes before reserved: "+n);var l,c,s=[];n?(console.log("Reservation 1 hour and 30 minutes before detected, restricting end-time to 1.5 hours after start time"),s.push({hour:r+Math.floor((t+90)/60),minutes:(t+90)%60})):(console.log("No restrictions, adding 1.5 hours and 2 hours after start time"),l={hour:r+Math.floor((t+90)/60),minutes:(t+90)%60},r={hour:r+Math.floor((t+120)/60),minutes:(t+120)%60},s.push(l,r)),console.log("Generated end-time options:",s);for(c of s){var d=c.hour.toString().padStart(2,"0")+":"+c.minutes.toString().padStart(2,"0"),u=c.hour<12?"AM":"PM",u=`${c.hour%12==0?12:c.hour%12}:${c.minutes.toString().padStart(2,"0")} `+u,m=(console.log("Adding end-time option: "+u),document.createElement("option"));m.value=d,m.textContent=u,o.appendChild(m)}}else console.log("No start time selected, exiting function")}async function logAllReservations(){try{var e,t=await fetch("http://localhost:5000/api/reservations",{method:"GET",headers:{"Content-Type":"application/json"}});t.ok?(e=await t.json(),console.log("All Reservations:",e)):console.error("Failed to fetch reservations:",await t.text())}catch(e){console.error("Error fetching reservations:",e)}}async function highlightReservationsForSelectedDate(o,r){try{let t=document.getElementById("date").value;var e,a;t?(console.log("Selected Date:",t),(e=await fetch("http://localhost:5000/api/reservations",{method:"GET",headers:{"Content-Type":"application/json"}})).ok?(a=await e.json(),console.log("Fetched Reservations:",a),document.querySelectorAll(".display-reservations-time").forEach(e=>{e.style.backgroundColor=""}),a.forEach(n=>{if(n.date===t&&n.court_id>=o&&n.court_id<=r){console.log(`Processing reservation for court_id: ${n.court_id}, start_time: ${n.start_time}, end_time: `+n.end_time);let a=n.court_id;5<=n.court_id&&n.court_id<=8?a=n.court_id-4:9<=n.court_id&&n.court_id<=12&&(a=n.court_id-8);var e=document.querySelector(`.display-reservations-collumn:nth-child(${a})`);e?e.querySelectorAll(".display-reservations-time").forEach(e=>{var t=e.id,[o,r]=t.split(" - ");(o>=n.start_time&&o<n.end_time||r>n.start_time&&r<=n.end_time)&&(console.log(`Highlighting slot: ${t} for court_id: `+a),o=parseInt(localStorage.getItem("user_id")),e.style.backgroundColor=n.user_id===o?"#90EE90":"red")}):console.error("Court column not found for mapped court_id: "+a)}})):console.error("Failed to fetch reservations:",await e.text())):console.log("No date selected, skipping reservation highlighting.")}catch(e){console.error("Error fetching reservations:",e)}}async function loadUpcomingReservations(){try{var e,t=await fetch("http://localhost:5000/api/reservations",{method:"GET",headers:{"Content-Type":"application/json"}});t.ok?(e=await t.json(),console.log("Fetched Reservations:",e),e.forEach(e=>{addUpcomingReservation({reservation_id:e.reservation_id,court:e.court_id,date:e.date,time:e.start_time+" - "+e.end_time,gameType:e.game_type.charAt(0).toUpperCase()+e.game_type.slice(1),players:e.players||"N/A"})})):console.error("Failed to fetch reservations:",await t.text())}catch(e){console.error("Error fetching reservations:",e)}}function addUpcomingReservation({court:e,date:t,time:o,gameType:r,players:a,reservation_id:n}){var i=document.querySelector(".display-upcoming-reservations"),s=document.createElement("div");s.className="upcoming-reservation",s.innerHTML=`
    <div class="upcoming-reservation-table">
      <div class="upcoming-reservation-court">Court : ${e}</div>
      <div class="upcoming-reservation-date">Date : ${t}</div>
      <div class="upcoming-reservation-time">Time : ${o}</div>
      <div class="upcoming-reservation-game-type">Type : ${r}</div>
      <div class="upcoming-reservation-players">Players : ${a}</div>
    </div>
    <div class="upcoming-reservation-table-2">
      <button class="cancel-reservation-button" data-reservation-id="${n}">Cancel</button>
    </div>
  `,s.querySelector(".cancel-reservation-button").addEventListener("click",async()=>{if(confirm("Are you sure you want to cancel this reservation?"))try{var e=await fetch("http://localhost:5000/api/delete-reservation",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({reservation_id:n})}),t=await e.json();e.ok?(alert("Reservation canceled!"),refreshUpcomingReservationsDisplay(),highlightReservationsForSelectedDate(1,4),loadGuestCount()):alert("Failed to cancel: "+t.error)}catch(e){console.error("Error canceling:",e),alert("Error occurred while canceling reservation.")}}),i.appendChild(s)}async function sendEmailFromBackend(e,t,o){try{var r=await fetch("http://localhost:5000/api/send-email",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,subject:t,body:o})});r.ok?console.log("Email sent successfully"):console.error("Failed to send email:",await r.text())}catch(e){console.error("Error sending email:",e)}}async function sendSampleEmail(){var e="moddedsnipping3@gmail.com";try{var t=await fetch("http://localhost:5000/api/send-email",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,subject:"Welcome to the Reservation System!",body:"This is a test email sent from the Reservation System on startup."})});t.ok?console.log("Sample email sent successfully to",e):console.error("Failed to send sample email:",await t.text())}catch(e){console.error("Error sending sample email:",e)}}document.addEventListener("DOMContentLoaded",()=>{sendSampleEmail(),loadUpcomingReservations(),loadGuestCount(),logAllReservations(),populateTimeOptions("start-time"),populateTimeOptions("end-time"),highlightReservationsForSelectedDate(1,4),document.getElementById("start-time").addEventListener("change",updateEndTimeOptions),document.getElementById("court").addEventListener("change",()=>{populateTimeOptions("start-time")})}),document.getElementById("date").addEventListener("change",()=>{populateTimeOptions("start-time"),highlightReservationsForSelectedDate(1,4)}),document.getElementById("submit-reservation").addEventListener("click",async function(e){e.preventDefault();try{var t=localStorage.getItem("user_id");if(t){loadGuestCount();var o=document.getElementById("date").value;if(o){let e=[];try{var r=await fetch(`http://localhost:5000/api/reservations?user_id=${t}&date=`+o,{method:"GET",headers:{"Content-Type":"application/json"}});if(!r.ok)return void alert("Failed to fetch user reservations. Please try again.");e=await r.json(),console.log(`User's reservations for ${o}:`,e)}catch(e){return console.error("Error fetching user reservations:",e),void alert("An error occurred while fetching user reservations.")}if(2<=e.length)alert("You cannot place more than 2 reservations on the same day.");else{var a=document.getElementById("start-time").value,n=document.getElementById("end-time").value,l=document.getElementById("game-type").value,c=document.getElementById("court").value;if(a&&n&&l&&c){let i=[],s=[];document.querySelectorAll(".player-entry").forEach(e=>{var t,o,r=e.querySelector("input[type='checkbox']").checked;let a=null,n=null;r?(o=e.querySelector("input[type='text']"),t=e.querySelector(".email-input"),o&&(a=o.value.trim()),t&&(n=t.value.trim())):(o=e.querySelector("input[type='hidden']"))&&(a=o.dataset.name,n=o.dataset.email),a&&(i.push({player_name:a,is_guest:r,email:n}),n)&&s.push(n)});var d,u,m=s,p=(console.log("Collected Emails:",m),document.querySelectorAll(".player-entry input[type='checkbox']:checked")),h=p.length,v={user_id:parseInt(t),court_id:parseInt(c),date:o,start_time:a,end_time:n,game_type:l.toLowerCase(),guest_count_used:h,players:i},g=await fetch("http://localhost:5000/api/reservations",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(v)});g.ok?(alert("Reservation successfully created!"),refreshUpcomingReservationsDisplay(),highlightReservationsForSelectedDate(1,4),d=await fetch("http://localhost:5000/api/send-reservation-emails",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({emails:m,reservation_details:{user_id:t,date:o,start_time:a,end_time:n,court:c,game_type:l}})}),console.log("Sending reservation emails:",m),d.ok?console.log("Reservation emails sent successfully"):console.error("Failed to send reservation emails:",await d.text())):(u=await g.json(),alert("Failed to create reservation: "+u.error))}else alert("Please fill in all required fields.")}}else alert("Please select a date.")}else alert("User not logged in. Please log in first.")}catch(e){console.error("Error creating reservation:",e),alert("An error occurred while creating the reservation.")}}),document.querySelectorAll(".player-entry input[type='checkbox']").forEach((e,t)=>{e.addEventListener("change",async function(){var e=this.closest(".player-entry"),t=e.querySelector(".player-input-container");if(this.checked)t.innerHTML=`
        <input type="text" placeholder="Enter Guest Name" class="player-input" />
      `,e.querySelector(".email-input")||((o=document.createElement("input")).type="email",o.placeholder="Enter Email for Guest",o.className="email-input",o.style.marginTop="10px",o.required=!0,e.appendChild(o));else{t.innerHTML=`
        <select class="player-select">
          <option value="" disabled selected>Select a Member</option>
        </select>
      `;var o=e.querySelector(".email-input");o&&e.removeChild(o);try{var r=await fetch("http://localhost:5000/api/members");if(r.ok){var a=await r.json();let o=t.querySelector(".player-select");a.forEach(e=>{var t=document.createElement("option");t.value=e.first_name+" "+e.last_name,t.textContent=e.first_name+" "+e.last_name,o.appendChild(t)})}else console.error("Failed to fetch members:",await r.text())}catch(e){console.error("Error fetching members:",e)}}})}),document.getElementById("court").addEventListener("change",function(){let o=parseInt(this.value);var e=document.querySelector(".display-reservations-box");let t,r;1<=o&&o<=4?(t=1,r=4,console.log("Displaying reservations for courts 1–4."),highlightReservationsForSelectedDate(t,r)):5<=o&&o<=8?(t=5,r=8,console.log("Displaying reservations for courts 5–8."),highlightReservationsForSelectedDate(t,r)):9<=o&&o<=12&&(t=9,r=12,console.log("Displaying reservations for courts 9–12."),highlightReservationsForSelectedDate(t,r)),e.querySelectorAll(".display-reservations-time").forEach(e=>{e.style.backgroundColor=""}),e.querySelectorAll(".display-reservations-collumn").forEach((e,t)=>{e=e.querySelector(".court-title");o<=4?e.textContent="Court "+(t+1):5<=o&&o<=8?e.textContent="Court "+(t+5):9<=o&&o<=12&&(e.textContent="Court "+(t+9))})}),document.getElementById("game-type").addEventListener("change",function(){var e=this.value.toLowerCase(),t=document.querySelectorAll(".player-entry");"singles"===e?t.forEach((e,t)=>{var o;0===t?e.classList.remove("hidden"):(e.classList.add("hidden"),t=e.querySelector("input[type='checkbox']"),o=e.querySelector(".email-input"),t&&(t.checked=!1),o&&e.removeChild(o))}):"doubles"===e&&t.forEach(e=>{e.classList.remove("hidden")})}),document.addEventListener("DOMContentLoaded",async()=>{let a=[];try{var e=await fetch("http://localhost:5000/api/members");e.ok?a=await e.json():console.error("Failed to fetch members:",await e.text())}catch(e){console.error("Error fetching members:",e)}document.querySelectorAll(".player-select").forEach(o=>{o.innerHTML='<option value="" disabled selected>Select a Member</option>',a.forEach(e=>{var t=document.createElement("option");t.value=e.first_name+" "+e.last_name,t.textContent=e.first_name+" "+e.last_name,o.appendChild(t)})}),document.querySelectorAll(".player-entry input[type='checkbox']").forEach(e=>{e.addEventListener("change",function(){var e=this.closest(".player-entry"),t=e.querySelector(".player-input-container");if(this.checked)t.innerHTML=`
          <input type="text" placeholder="Enter Guest Name" class="player-input" />
        `,e.querySelector(".email-input")||((r=document.createElement("input")).type="email",r.placeholder="Enter Email for Guest",r.className="email-input",r.style.marginTop="10px",r.required=!0,e.appendChild(r));else{t.innerHTML=`
          <select class="player-select">
            <option value="" disabled selected>Select a Member</option>
          </select>
        `;let o=t.querySelector(".player-select");a.forEach(e=>{var t=document.createElement("option");t.value=e.first_name+" "+e.last_name,t.textContent=e.first_name+" "+e.last_name,o.appendChild(t)});var r=e.querySelector(".email-input");r&&e.removeChild(r)}})})});
//# sourceMappingURL=reservations.min.js.map
