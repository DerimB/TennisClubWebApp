async function fetchMembers(e=""){e=await(await fetch("http://localhost:5000/api/members-finances?search="+e)).json();console.log("Response from /api/members-finances:",e);let a=document.getElementById("members-list");a.innerHTML="",e.forEach(e=>{var t=document.createElement("tr");t.innerHTML=`
          <td>${e.id}</td>
          <td>${e.first_name}</td>
          <td>${e.last_name}</td>
          <td>${e.email}</td>
          <td>${e.phone_number}</td>
          <td>${e.balance}</td>

        `,a.appendChild(t)})}document.addEventListener("DOMContentLoaded",()=>{async function c(){let t=parseInt(document.getElementById("id").value);if(!isNaN(t))try{var e=(await(await fetch("http://localhost:5000/api/members-finances")).json()).find(e=>e.id===t);e?(document.querySelector(".member-name").textContent=e.first_name+" "+e.last_name,document.querySelector(".member-amount-due").textContent="$"+e.balance.toFixed(2)):(document.querySelector(".member-name").textContent="User not found",document.querySelector(".member-amount-due").textContent="")}catch(e){console.error("Error fetching user info:",e)}}fetchMembers(),document.getElementById("search").addEventListener("input",e=>{fetchMembers(e.target.value)}),document.querySelector(".charge-400").addEventListener("click",async()=>{var e=document.getElementById("id").value,e={user_id:parseInt(e),balance:400};try{var t=await fetch("http://localhost:5000/api/modify-balance",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),a=await t.json();t.ok?(alert("User balance successfully updated!"),fetchMembers(),c()):alert("Failed to update user balance: "+a.error)}catch(e){console.error("Error: ",e),alert("An error occurred while updating the user balance.")}}),document.querySelector(".charge-1000").addEventListener("click",async()=>{var e=document.getElementById("id").value,e={user_id:parseInt(e),balance:1e3};try{var t=await fetch("http://localhost:5000/api/modify-balance",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),a=await t.json();t.ok?(alert("User charged $1000"),fetchMembers(),c()):alert("Failed to charge user: "+a.error)}catch(e){console.error("Error: ",e),alert("An error occurred while charging the user.")}}),document.querySelector(".charge-10p").addEventListener("click",async()=>{let t=parseInt(document.getElementById("id").value);try{var e,a,r,n,o=(await(await fetch("http://localhost:5000/api/members-finances")).json()).find(e=>e.id===t);o?(e=Math.round(.1*o.balance*100)/100,a={user_id:t,balance:e},n=await(r=await fetch("http://localhost:5000/api/modify-balance",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json(),r.ok?(alert(`Added 10% fee ($${e})`),fetchMembers(),c()):alert("Failed to apply 10% fee: "+n.error)):alert("User not found.")}catch(e){console.error("Error: ",e),alert("An error occurred while applying the fee.")}}),document.querySelector(".pay-custom").addEventListener("click",async()=>{var e=document.getElementById("id").value,t=parseFloat(document.getElementById("payment-amount").value);if(!e||isNaN(t))alert("Enter a valid user ID and payment amount.");else{e={user_id:parseInt(e),balance:-t};try{var a=await fetch("http://localhost:5000/api/modify-balance",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),r=await a.json();a.ok?(alert("Payment applied successfully."),fetchMembers(),c()):alert("Failed to apply payment: "+r.error)}catch(e){console.error("Error:",e),alert("Error while applying payment.")}}}),document.querySelector(".pay-full").addEventListener("click",async()=>{var e=document.getElementById("id").value;if(e){e={user_id:parseInt(e),balance:"PAID_FULL"};try{var t=await fetch("http://localhost:5000/api/modify-balance",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),a=await t.json();t.ok?(alert("Balance set to $0."),fetchMembers(),c()):alert("Failed to update balance: "+a.error)}catch(e){console.error("Error:",e),alert("Error while updating balance.")}}else alert("Enter a valid user ID.")}),document.getElementById("id").addEventListener("input",c)});
//# sourceMappingURL=treasurery.min.js.map
