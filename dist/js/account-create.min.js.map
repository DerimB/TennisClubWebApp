{"version":3,"file":"account-create.min.js","sources":["account-create.js"],"sourcesContent":["document.querySelector(\".add-account\").addEventListener(\"click\", async () => {\r\n    //Get inputted data\r\n    const firstname = document.getElementById(\"first_name\").value;\r\n    const lastname = document.getElementById(\"last_name\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const phonenum = document.getElementById(\"phone_number\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const role = document.getElementById(\"role\").value;\r\n\r\n    const visibilityRaw = document.getElementById(\"visibility\").value;\r\n    const visibility = [\"true\", \"1\"].includes(visibilityRaw.toString().toLowerCase());\r\n\r\n    if (!firstname || !lastname || !email || !password) {\r\n        alert(\"Please fill in all required fields.\");\r\n        return;\r\n    }\r\n\r\n    const user = {\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        phonenum,\r\n        password,\r\n        role,\r\n        visibility\r\n    };\r\n    console.log(user);\r\n\r\n    try {\r\n        const response = await fetch(\"http://localhost:5000/api/create-account\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (response.ok) {\r\n            alert(\"User successfully added!\");\r\n        } else {\r\n            alert(\"Failed to add user: \" + result.error);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error: \", error);\r\n        alert(\"An error occured while creating a user\");\r\n    }\r\n  });\r\n  "],"names":["document","querySelector","addEventListener","async","firstname","getElementById","value","lastname","email","phonenum","password","role","visibilityRaw","visibility","includes","toString","toLowerCase","user","console","log","response","await","fetch","method","headers","Content-Type","body","JSON","stringify","result","json","ok","alert","error"],"mappings":"AAAAA,SAASC,cAAc,cAAc,EAAEC,iBAAiB,QAASC,UAE7D,IAAMC,EAAYJ,SAASK,eAAe,YAAY,EAAEC,MAClDC,EAAWP,SAASK,eAAe,WAAW,EAAEC,MAChDE,EAAQR,SAASK,eAAe,OAAO,EAAEC,MACzCG,EAAWT,SAASK,eAAe,cAAc,EAAEC,MACnDI,EAAWV,SAASK,eAAe,UAAU,EAAEC,MAC/CK,EAAOX,SAASK,eAAe,MAAM,EAAEC,MAEvCM,EAAgBZ,SAASK,eAAe,YAAY,EAAEC,MACtDO,EAAa,CAAC,OAAQ,KAAKC,SAASF,EAAcG,SAAS,EAAEC,YAAY,CAAC,EAEhF,GAAKZ,GAAcG,GAAaC,GAAUE,EAA1C,CAKMO,EAAO,CACTb,UAAAA,EACAG,SAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,KAAAA,EACAE,WAAAA,CACJ,EACAK,QAAQC,IAAIF,CAAI,EAEhB,IACI,IAAMG,EAAWC,MAAMC,MAAM,2CAA4C,CACrEC,OAAQ,OACRC,QAAS,CACLC,eAAgB,kBACpB,EACAC,KAAMC,KAAKC,UAAUX,CAAI,CAC7B,CAAC,EAEKY,EAASR,MAAMD,EAASU,KAAK,EAC/BV,EAASW,GACTC,MAAM,0BAA0B,EAEhCA,MAAM,uBAAyBH,EAAOI,KAAK,CAKnD,CAHE,MAAOA,GACLf,QAAQe,MAAM,UAAWA,CAAK,EAC9BD,MAAM,wCAAwC,CAClD,CA/BA,MAFIA,MAAM,qCAAqC,CAkCjD,CAAC"}